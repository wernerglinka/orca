{"version":3,"sources":["main.js"],"names":["fadeOut","el","style","opacity","fade","display","requestAnimationFrame","fadeIn","val","parseFloat","initialScreenState","init","img","Image","onload","document","body","classList","remove","src","lineNumbers","codeContainers","getElementsByClassName","codeArray","i","console","log","length","thisCodeContainer","querySelector","prepend","outerHTML","split","join","addEventListener","event"],"mappings":"AAAA;;AACA;AAGC,aAAY;AAET,eAFS,CAIT;;AACA,WAASA,OAAT,CAAiBC,EAAjB,EAAqB;AACjBA,OAAGC,KAAH,CAASC,OAAT,GAAmB,CAAnB;;AAEC,cAASC,IAAT,GAAgB;AACb,UAAI,CAACH,GAAGC,KAAH,CAASC,OAAT,IAAoB,GAArB,IAA4B,CAAhC,EAAmC;AAC/BF,WAAGC,KAAH,CAASG,OAAT,GAAmB,MAAnB;AACH,OAFD,MAEO;AACHC,8BAAsBF,IAAtB;AACH;AACJ,KANA,GAAD;AAOH,GAfQ,CAiBT;;;AACA,WAASG,MAAT,CAAgBN,EAAhB,EAAoBI,OAApB,EAA6B;AACzBJ,OAAGC,KAAH,CAASC,OAAT,GAAmB,CAAnB;AACAF,OAAGC,KAAH,CAASG,OAAT,GAAmBA,WAAW,OAA9B;;AAEC,cAASD,IAAT,GAAgB;AACb,UAAII,MAAMC,WAAWR,GAAGC,KAAH,CAASC,OAApB,CAAV;;AACA,UAAI,EAAE,CAACK,OAAO,GAAR,IAAe,CAAjB,CAAJ,EAAyB;AACrBP,WAAGC,KAAH,CAASC,OAAT,GAAmBK,GAAnB;AACAF,8BAAsBF,IAAtB;AACH;AACJ,KANA,GAAD;AAOH;;AAED,QAAMM,qBAAsB,YAAY;AACpC,QAAIC,OAAO,YAAY;AACnB,UAAIC,MAAM,IAAIC,KAAJ,EAAV;;AACAD,UAAIE,MAAJ,GAAa,YAAY;AACrBC,iBAASC,IAAT,CAAcC,SAAd,CAAwBC,MAAxB,CAA+B,WAA/B;AACH,OAFD;;AAGAN,UAAIO,GAAJ,GAAU,oFAAV;AACH,KAND;;AAQA,WAAO;AACHR,YAAMA;AADH,KAAP;AAGH,GAZ2B,EAA5B,CA/BS,CA6CT;AACA;;;AACA,QAAMS,cAAe,YAAY;AAC7B,QAAIT,OAAO,YAAY;AACnB,YAAMU,iBAAiBN,SAASO,sBAAT,CAAgC,cAAhC,CAAvB;AACA,UAAIC,SAAJ,EAAeC,CAAf;AAEAC,cAAQC,GAAR,CAAYL,cAAZ;;AACA,WAAK,IAAIG,IAAI,CAAb,EAAgBH,eAAeM,MAAf,GAAwBH,CAAxC,EAA2CA,GAA3C,EAAgD;AAC5C,YAAII,oBAAoBP,eAAeG,CAAf,CAAxB,CAD4C,CAE5C;;AACAI,0BAAkBC,aAAlB,CAAgC,MAAhC,EAAwCC,OAAxC,CAAgD,IAAhD,EAH4C,CAK5C;;AACAP,oBAAYK,kBAAkBG,SAAlB,CAA4BC,KAA5B,CAAkC,IAAlC,CAAZ,CAN4C,CAO5C;;AACA,aAAKR,IAAI,CAAT,EAAYA,IAAID,UAAUI,MAA1B,EAAkCH,GAAlC,EAAuC;AACnCD,oBAAUC,CAAV,IAAe,6BAA6BD,UAAUC,CAAV,CAA7B,GAA4C,SAA3D;AACH,SAV2C,CAW5C;;;AACAI,0BAAkBG,SAAlB,GAA8BR,UAAUU,IAAV,CAAe,IAAf,CAA9B;AACH;AACJ,KAnBD;;AAqBA,WAAO;AACHtB,YAAMA;AADH,KAAP;AAGH,GAzBoB,EAArB,CA/CS,CA0EL;;;AACAI,WAASmB,gBAAT,CAA0B,kBAA1B,EAA8C,UAAUC,KAAV,EAAiB;AAC3DzB,uBAAmBC,IAAnB;AACAS,gBAAYT,IAAZ;AACH,GAHD,EA3EK,CA+EL;AACH,CAhFJ,GAAD","file":"main.js","sourcesContent":["/*jslint regexp: true, nomen: true, vars: true, plusplus: true*/\n/*global document, body, window, requestAnimationFrame, Image*/\n\n\n(function () {\n\n    'use strict';\n\n    // fade out\n    function fadeOut(el) {\n        el.style.opacity = 1;\n\n        (function fade() {\n            if ((el.style.opacity -= 0.1) < 0) {\n                el.style.display = \"none\";\n            } else {\n                requestAnimationFrame(fade);\n            }\n        }());\n    }\n\n    // fade in\n    function fadeIn(el, display) {\n        el.style.opacity = 0;\n        el.style.display = display || \"block\";\n\n        (function fade() {\n            let val = parseFloat(el.style.opacity);\n            if (!((val += 0.1) > 1)) {\n                el.style.opacity = val;\n                requestAnimationFrame(fade);\n            }\n        }());\n    }\n\n    const initialScreenState = (function () {\n        let init = function () {\n            let img = new Image();\n            img.onload = function () {\n                document.body.classList.remove(\"isLoading\");\n            };\n            img.src = \"http://dev-orca.pantheonsite.io/sites/default/files/home-page/fullscreen_image.jpg\";\n        };\n\n        return {\n            init: init\n        };\n    }());\n\n    // function to add line numbers wrapper to syntax code lines\n    // numbers are added via CSS counter\n    const lineNumbers = (function () {\n        let init = function () {\n            const codeContainers = document.getElementsByClassName('line-numbers');\n            let codeArray, i;\n\n            console.log(codeContainers);\n            for (let i = 0; codeContainers.length > i; i++) {\n                let thisCodeContainer = codeContainers[i];\n                //insert a new line after open <code> tag\n                thisCodeContainer.querySelector('code').prepend('\\n');\n\n                // add a line wrapper to each code line\n                codeArray = thisCodeContainer.outerHTML.split('\\n');\n                // start with the second array element and stop before the last so we don't wrap the <pre><code> tags\n                for (i = 0; i < codeArray.length; i++) {\n                    codeArray[i] = \"<span class='code-line'>\" + codeArray[i] + \"</span>\";\n                }\n                // replace code\n                thisCodeContainer.outerHTML = codeArray.join('\\n');\n            }\n        };\n\n        return {\n            init: init\n        }\n    }());\n\n        //the document ready function\n        document.addEventListener(\"DOMContentLoaded\", function (event) { \n            initialScreenState.init();\n            lineNumbers.init();\n        });\n        // end ready function\n    }());"]}